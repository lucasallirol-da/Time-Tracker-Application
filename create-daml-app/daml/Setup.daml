module Setup where

import DA.Optional (fromSomeNote)
import qualified DA.Text as T
import Daml.Script

-- | A record containing all the parties that we will use in our script
data Parties = Parties
  with
    alice : Party
    bob : Party
    charlie: Party
    public: Party

data Projects = Projects
  with
    newApp : Party
    support : Party
    cloud: Party

-- | A test user for the create-daml-app network.
-- When a participantName is provided, the testUser will be created/or fetched
-- on the given participant.
data TestUser = TestUser with
  alias : Text
  public : Party
  participantName: Optional ParticipantName

defaultParticipant : Optional ParticipantName
defaultParticipant = None
-- | Create a public party, then create three test users.

setup : Script Projects
setup = do
  alice <- allocateParty "Alice"
  bob <- allocateParty "Bob"

  newApp <- allocateParty "newApp"
  support <- allocateParty "support"
  cloud <- allocateParty "cloud"
  pure $ Projects with
    newApp
    support
    cloud
    

--   -- | Create a test user.
-- createProject : Text -> Script Party
-- createProject projectName = do
--   u <- getOrCreateUser alias (Some public) participantName
--   let p = getPrimaryParty u
--   pure p
    
-- Get the current time
-- currentTime <- getTime

-- -- Generate the contractId using the helper function
-- let contractId = generateContractId currentTime

-- -- Create the contract with the auto-assigned contractId
-- contractId <- submit alice do
--   createCmd Contract with
--     issuer = alice
--     owner = bob
--     contractId = contractId
--     creationTime = currentTime
